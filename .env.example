# Google Cloud Configuration
GOOGLE_GENAI_USE_VERTEXAI=1
GOOGLE_CLOUD_PROJECT=your-project-id
GOOGLE_CLOUD_LOCATION=us-central1
RAG_CORPUS=projects/your-project-id/locations/us-central1/ragCorpora/your-corpus-id
GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/service-account-key.json
GENAI_MODEL_NAME=gemini-2.0-flash-001


# Security Configuration
SECRET_KEY=your-flask-secret-key
JWT_SECRET_KEY=your-jwt-secret-key

# Authentication Demo Credentials (replace with proper auth in production)
DEMO_USER=admin
DEMO_PASSWORD=secure-password-here

# Allowed origins for CORS (comma-separated)
# Example: React frontend on localhost or any deployed frontend domains
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:5500

# Flask Configuration
FLASK_DEBUG=True # Set to 'False' in production environment

# The lifetime of the access token can be set in hours from the environment variable.
JWT_ACCESS_TOKEN_EXPIRES_HOURS=1

# Pg Configuration
postgresql://user:yDAKpXNzkvAmwWbjG1Hp102tHXzoM@dpg-d1vndjk9c44c73e1l09g-a.oregon-postgres.render.com:5432/chat_bot
#postgresql://<username>:<password>@<host>:<port>/<database>

# postgresql: This is the dialect, specifying that the application should connect to a PostgreSQL database
# user: This is the username for database authentication.
# yDAKpXNzkvAmwWbjG1Hp102tHXzoM: This is the password associated with the username ashiq
# dpg-d1vndjk9c44c73e1l09g-a.oregon-postgres.render.com: This is the host address where the database server is located. The name suggests it's a PostgreSQL instance hosted on Render.com in their Oregon region
# chat_bot: This is the specific database name on the host server that the application will connect to


# Do NOT include credentials file paths in this file
# Instead, set GOOGLE_APPLICATION_CREDENTIALS as an environment variable
# outside of this file or use a secure secret management solution
